1. Cleanup
rpm -e ciph_app-<VERSION>-rel.centos.x86_64

2. Install
cd ~/ciph_app
rpm -i ciph_app-<VERSION>-rel.centos.x86_64.rpm

#manipulate container
lxc-stop -n ciph_app
lxc-start -n ciph_app
lxc-info -n ciph_app
lxc-attach -n ciph_app

# run app inside cintainer
[root@ciph_app /]# cd /home/ciph_app && ./dpdk-crypto-app cfg
# or to run on specific CPU affinity
[root@ciph_app /]# cd /home/ciph_app && taskset 0x1 ./dpdk-crypto-app cfg

3. Build and run CIPH_APP_TEST
cd ~/ciph_app
# Unpack DEVEL packadge
tar zxf dist/ciph_app_devel-<VERSION>.tar.gz

[ciph_app_devel]
    |-- [lib]
    |      |-- libciph_agent.so
    |
    |-- [include]
    |      |-- ciph_agent_c.h
    |      |-- data_vectors.h
    |
    |-- [examoles]
    |       |-- ciph_app_test.c
    |       |-- build.sh
    |
    |-- VERSION

# build CIPH_APP_TEST
cd ciph_app_devel/examoles && . ./build.sh

# run CIPH_APP_TEST
./ciph_app_test
# or to run on specific CPU affinity
taskset 0x4 ./ciph_app_test

4. If your client runs inside the lxc container, make sure to update it's configuration
echo "lxc.mount.entry = /tmp/ciph_app tmp/ciph_app none bind,private,create=file"  >> PATH_TO_YOUR_CONT/config

5. Iside stack Dockerfile add - TODO

HASH=
jfrog rt use pwartifactory
jfrog rt dl --flat=true --fail-no-op=true --props "commitID=${HASH}" --sort-by=created --sort-order=desc --limit=1 "pw-products/ciph_app/"
tar zxf *.tar.gz
cd DIR
rpm -i RPM

6. Enjoy